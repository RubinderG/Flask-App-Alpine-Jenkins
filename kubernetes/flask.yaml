apiVersion: v1
kind: Namespace
metadata: 
  name: {{ns}} 
  labels: 
    name: {{ns}} 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  namespace: {{ns}}
  labels:
    app: flask-app
spec:
  replicas: 10
  selector:
    matchLabels:
      app: flask-app
  strategy:
    rollingUpdate:
      maxSurge: 10%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask
        image: eu.gcr.io/lbg-cloud-incubation/rkg-flask-alpine:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5500
---
kind: Service
apiVersion: v1
metadata:
  name: flask-service
  namespace: {{ns}}
spec:
  type: ClusterIP
  selector:
    app: flask-app
  ports:
  - protocol: TCP
    port: 5500
    
  # apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: flaskapp
#   labels:
#     app: flaskapp
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: flaskapp
#   strategy:
#     rollingUpdate:
#       maxSurge: 10%
#       maxUnavailable: 25%
#   template:
#     metadata:
#       labels:
#         app: flaskapp
#     spec:
#       containers:
#       - name: flask-container
#         image: eu.gcr.io/lbg-cloud-incubation/rkg-flask-alpine:latest
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 5500
    
# apiVersion: v1
# kind: Pod
# metadata:
#   name: flask-app
#   labels:
#     app: flask
# spec:
#   containers:
#   - name: flask-cantainer
#     image: rubinder/flask-app:latest
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: flask-app-service
# spec:
#   type: LoadBalancer
#   selector:
#     app: flask
#   ports:
#   - protocol: TCP
#     port: 80 
#     targetPort: 5500
